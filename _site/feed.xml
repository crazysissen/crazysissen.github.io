<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-10-14T01:08:07+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Developer Portfolio</title><subtitle>Summary of various software projects developed by Sixten Schelin, or (explicitly stated) those to which he has contributed.
</subtitle><author><name>Sixten Schelin</name><email>sixtensch@gmail.com</email></author><entry><title type="html">Whisperwoods</title><link href="http://localhost:4000/2024/10/11/whisperwoods.html" rel="alternate" type="text/html" title="Whisperwoods" /><published>2024-10-11T00:00:00+02:00</published><updated>2024-10-11T00:00:00+02:00</updated><id>http://localhost:4000/2024/10/11/whisperwoods</id><content type="html" xml:base="http://localhost:4000/2024/10/11/whisperwoods.html"><![CDATA[<p>A <strong>video game</strong> and <strong>engine</strong> built from scratch in six weeks as a university group project</p>

<!--more-->

<p>Representing the culmination of our first three years in university, Whisperwoods shows off many facets of video game tech, rendering, creative optimization, and software engineering. Developed with little integration of external software libraries, the game features a renderer built from scratch using DirectX 11, custom resource asset formats, procedural world generation, and fast-paced strategic stealth gameplay, all optimized to run smoothly on very rudimentary hardware.</p>

<div style="display: flex; align-items: center; margin-right: 10px;">
<img src="/assets/github-mark.svg" style="height: 30px; margin-right: 10px;" />
<a class="button button--secondary button--rounded button--lg" href="https://github.com/sixtensch/Whisperwoods" style="margin-right: 10px;">
Whisperwoods on GitHub
</a>
</div>

<hr />

<div style="width: 80%; margin-left: auto; margin-right: auto;"><div class="extensions extensions--video">
  <iframe src="https://www.youtube.com/embed/jSfU6uw6qy8?rel=0&amp;showinfo=0" frameborder="0" scrolling="no" allowfullscreen=""></iframe>
</div>
</div>

<p>The team, consisting of six developers specialized and interested in different things, synergized to build a fairly well-rounded game engine. The software features and gameplay overview are demonstrated in an early build trailer available on YouTube.</p>

<p>Of course, I was not the totality of the development group. These are my contributions:</p>
<ul>
  <li>Initial rendering and lighting</li>
  <li>Render pass optimizations and mass instancing</li>
  <li>Program infrastructure and core system design</li>
  <li>Codebase maintenance and refactoring</li>
  <li>Procedural world generation</li>
  <li>Contributions to core software architecture</li>
  <li>Build system configuration and build automation</li>
  <li>Music and iconography</li>
</ul>]]></content><author><name>Sixten Schelin</name><email>sixtensch@gmail.com</email></author><category term="C++" /><category term="Game" /><category term="Engine" /><category term="Team" /><category term="CHSL" /><summary type="html"><![CDATA[A video game and engine built from scratch in six weeks as a university group project]]></summary></entry><entry><title type="html">TOOL</title><link href="http://localhost:4000/2024/10/10/tool.html" rel="alternate" type="text/html" title="TOOL" /><published>2024-10-10T00:00:00+02:00</published><updated>2024-10-10T00:00:00+02:00</updated><id>http://localhost:4000/2024/10/10/tool</id><content type="html" xml:base="http://localhost:4000/2024/10/10/tool.html"><![CDATA[<p>A kitchen sink function-oriented <b>standard library</b> to simplify development and cut compile times in C++ game software.</p>

<!--more-->

<p>Made for projects that distance themselves from the monolithic language standard libraries, the library is built for simplicity and real usability in game software. TOOL is the newer standard library of mine, more or less replacing the object-oriented CHSL. In recognizing that good low-level software strives to be simple to maintain both performance and modifiability, TOOL aims to break down the most common and useful software tools into digestible functional interfaces.</p>

<div style="display: flex; align-items: center; margin-right: 10px;">
<img src="/assets/github-mark.svg" style="height: 30px; margin-right: 10px;" />
<a class="button button--secondary button--rounded button--lg" href="https://github.com/crazysissen/TOOL" style="margin-right: 10px;">
TOOL on GitHub
</a>
</div>

<hr />

<p>The <em>Tired-Of-Objects Library</em>, or <em>TOOL</em>, is a constantly evolving multi-platform function-oriented standard library built for performance, simplicity, and flexibility. The library was born out of dissatisfaction with much of modern object-oriented design, along with the massive C++ standard libraries that follow. While these massive and feature-rich libraries naturally serve an important purpose, having a simpler, more direct alternative for all of the most common functionality serves to streamline and speed up development. From these feelings spring a desire for something better, and more suited to my needs and the needs of my peers.</p>

<p>Headers are intentionally built <strong>short</strong>, <strong>simple</strong>, and <strong>straight-forward</strong>. This works in a low-level software developerâ€™s favor for a number of reasons.</p>

<ul>
  <li>It cuts down the horrendous compile times often experienced with the humongous templated C++ standard library includes to near-zero. Wanting a translation unit to act on a string of text should not require an extra second on every compile.</li>
  <li>It simplifies error logging, as functionality is more specific and less templated. The smallest perceivable error in a call to <code class="language-plaintext highlighter-rouge">std::format</code> or <code class="language-plaintext highlighter-rouge">std::regex_search</code> can produce a short novel for you to read through, a waste of time if there ever was one.</li>
  <li>It self-documents the functionality through a legible and digestible interface. Following a <code class="language-plaintext highlighter-rouge">#include &lt;string&gt;</code> link to the source file seldom provides enlightenment on anything. Well-designed code can benefit from, but should not <em>require</em>, extensive commenting or documentation to be comprehensible.</li>
  <li>It breaks down the humongous array of esoteric utilities made available through large modern standard libraries into the most core constituent parts. Performance-oriented programmers often strive to optimize their software and understand its workings, not pray to higher powers that the standard library becomes the bottleneck.</li>
</ul>]]></content><author><name>Sixten Schelin</name><email>sixtensch@gmail.com</email></author><category term="C++" /><category term="Library" /><category term="TOOL" /><summary type="html"><![CDATA[A kitchen sink function-oriented standard library to simplify development and cut compile times in C++ game software.]]></summary></entry><entry><title type="html">CHSL</title><link href="http://localhost:4000/2024/10/09/chsl.html" rel="alternate" type="text/html" title="CHSL" /><published>2024-10-09T00:00:00+02:00</published><updated>2024-10-09T00:00:00+02:00</updated><id>http://localhost:4000/2024/10/09/chsl</id><content type="html" xml:base="http://localhost:4000/2024/10/09/chsl.html"><![CDATA[<p>An object-oriented <b>standard library</b> consisting of utility classes for various purposes, used by many projects of mine.</p>

<!--more-->

<p>CHSL is a more fully featured <em>object-oriented</em> counterpart to TOOL, my newer library.</p>

<div style="display: flex; align-items: center; margin-right: 10px;">
<img src="/assets/github-mark.svg" style="height: 30px; margin-right: 10px;" />
<a class="button button--secondary button--rounded button--lg" href="https://github.com/crazysissen/CHSL" style="margin-right: 10px;">
CHSL on GitHub
</a>
</div>

<hr />

<p>The <em>Crazy High Standards Library</em>, or <em>CHSL</em>, is an older but more feature rich standard library adhering to object-oriented principles. It has been used in a number of my other projects since, and has grown over time to include many features.</p>]]></content><author><name>Sixten Schelin</name><email>sixtensch@gmail.com</email></author><category term="C++" /><category term="Library" /><category term="CHSL" /><summary type="html"><![CDATA[An object-oriented standard library consisting of utility classes for various purposes, used by many projects of mine.]]></summary></entry></feed>